services:
  mcpx:
    image: craftslab/mcpx:latest
    container_name: mcpx
    depends_on:
      postgres:
        condition: service_healthy
    # See .env.example for more documentation
    environment:
      - MCP_REGISTRY_DATABASE_URL=${MCP_REGISTRY_DATABASE_URL:-postgres://mcpregistry:mcpregistry@postgres:5432/mcp-registry}
      - MCP_REGISTRY_ENVIRONMENT=${MCP_REGISTRY_ENVIRONMENT:-test}
      - MCP_REGISTRY_GITHUB_CLIENT_ID=${MCP_REGISTRY_GITHUB_CLIENT_ID:-Iv23licy3GSiM9Km5jtd}
      - MCP_REGISTRY_GITHUB_CLIENT_SECRET=${MCP_REGISTRY_GITHUB_CLIENT_SECRET:-0e8db54879b02c29adef51795586f3c510a9341d}
      - MCP_REGISTRY_JWT_PRIVATE_KEY=${MCP_REGISTRY_JWT_PRIVATE_KEY:-8103179d8ef955f6d3de6d6217224a909ec4060529dfeb1d4ca5a994537658cd}
      - MCP_REGISTRY_ENABLE_ANONYMOUS_AUTH=${MCP_REGISTRY_ENABLE_ANONYMOUS_AUTH:-true}
    ports:
      - 8080:8080
    networks:
      - mcpx-network
    restart: "unless-stopped"

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: mcp-registry
      POSTGRES_USER: mcpregistry
      POSTGRES_PASSWORD: mcpregistry
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - './.db:/var/lib/postgresql/data'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcpregistry -d mcp-registry"]
      interval: 1s
      retries: 30
    ports:
      - "5432:5432"
    networks:
      - mcpx-network
    restart: "unless-stopped"

  mcpx-ui:
    image: craftslab/mcpx-ui:latest
    container_name: mcpx-ui
    depends_on:
      - mcpx
    ports:
      - 5173:5173
    environment:
      - NODE_ENV=production
    networks:
      - mcpx-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: mcpx-nginx
    depends_on:
      - mcpx-ui
      - mcpx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mcpx-network
    restart: "unless-stopped"

networks:
  mcpx-network:
    driver: bridge
